name: Foodgram workflow

on: [push]

jobs:
  tests:
    name: PEP8 tests
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.7

    - name: Install dependencies
      run: | 
        python -m pip install --upgrade pip 
        pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
        cd backend/
        pip install -r requirements.txt 

    - name: Test with flake8 and django tests
      run: |
        python -m flake8 backend

  build_backend_and_push_to_docker_hub:
    name: Pushing backend image to Docker Hub
    runs-on: ubuntu-latest
    needs:
      - tests
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to Docker Hub
        uses: docker/build-push-action@v2
        with:
          context: ./backend
          push: true
          tags: lichinin/foodgram-backend:latest

  build_frontend_and_push_to_docker_hub:
    name: Push Docker frontend image to Docker Hub
    runs-on: ubuntu-latest
    needs:
      - tests
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push to Docker Hub
        uses: docker/build-push-action@v2
        with:
          context: ./frontend
          push: true
          tags: lichinin/foodgram_frontend:latest
  deploy:
      runs-on: ubuntu-latest
      needs:
        - tests
        - build_backend_and_push_to_docker_hub
        - build_frontend_and_push_to_docker_hub

      steps:
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }} # Если ваш ssh-ключ защищён фразой-паролем
          script: |
            sudo rm -f .env        
            sudo touch .env
            sudo chmod 666 .env
            
            sudo echo SECRET_KEY=${{ secrets.SECRET_KEY }} >> .env
            sudo echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
            sudo echo DB_NAME=${{ secrets.DB_NAME }} >> .env
            sudo echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
            sudo echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
            sudo echo DB_HOST=${{ secrets.DB_HOST }} >> .env
            sudo echo DB_PORT=${{ secrets.DB_PORT }} >> .env
            
            sudo docker-compose stop
            
            sudo docker-compose rm backend
            sudo docker-compose pull backend
            sudo docker-compose rm frontend
            sudo docker-compose pull frontend
            
            sudo docker-compose up -d --build
